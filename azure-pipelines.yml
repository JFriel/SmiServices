---

# TODO(rkm 2020-12-04) See if we can build on both Linux and Windows here

trigger:
    branches:
        include: ["*"]
    tags:
        include: ["*"]

variables:
  CI: 1
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  RDMP_CLI_DIR: $(Pipeline.Workspace)/rdmp-cli
  TESS_DATA_DIR: $(Pipeline.Workspace)/tessdata

jobs:     
    - job: run_dotnet_tests
      displayName: Run dotnet tests
      steps:
          - task: Cache@2
            displayName: Cache NuGet packages
            inputs:
              key: 'nuget | "$(Agent.OS)" | **/*.csproj'
              path: $(NUGET_PACKAGES)              
          - task: CmdLine@2
            displayName: Set RDMP version
            inputs:
              script: |
                  rdmp_ver=$(grep -F -m1 HIC.RDMP.Plugin src/common/Smi.Common/Smi.Common.csproj | sed -n 's/.*Version="\([0-9.]*\)".*/\1/p')
                  echo $rdmp_ver
                  echo '##vso[task.setvariable variable=rdmp_ver]$rdmp_ver'
          - task: Cache@2
            displayName: Cache rdmp-cli
            inputs:
              key: '"rdmp-cli" | "$(Agent.OS)" | "${{ variables.one }}"'
              path: $(RDMP_CLI_DIR)
          - task: Cache@2
            displayName: Cache tesseract data
            inputs:
              key: 'tessdata | "$(Agent.OS)"'
              restoreKeys: |
                tessdata
              path: $(TESS_DATA_DIR)
          - task: Bash@3
            inputs:
              filePath: './meta/run_dotnet_tests.sh'
              failOnStderr: true

    - job: run_java_tests
      displayName: Run java tests
      steps:
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | **/pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Bash@3
            inputs:
              filePath: './meta/run_java_tests.sh'
              failOnStderr: true
        
    - job: build_artefacts
      displayName: Upload tagged releases to GitHub
      condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
      dependsOn: [run_dotnet_tests, run_java_tests]
      steps:
        - script: ./meta/build_artefacts.sh $( echo ${{ variables.Build.SourceBranch }} | cut -d'/' -f3)
